name: "Build"

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
jobs:
  build:
    name: Build 
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: true
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      WORKSPACE_ROOT: ${{ github.workspace }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup libnss3-tools
      run: sudo apt-get install -y libnss3-tools
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Dev cert
      run: |
        dotnet dev-certs https -ep ./https.crt --format PEM
        certutil -d sql:$HOME/.pki/nssdb -A -t "P,," -n localhost -i ./https.crt
        certutil -d sql:$HOME/.pki/nssdb -A -t "C,," -n localhost -i ./https.crt

    - name: Run the web for test
      run: dotnet ./WebApplication73/bin/Release/net5.0/WebApplication73.dll &

    - name: Setup Playwright
      run: |
        dotnet tool install -g Microsoft.Playwright.CLI
        npx playwright install-deps chromium

    - name: Ensure latest Chromium
      run: |
        npm i -D playwright

    - name: Test
      run: dotnet test

    - name: Upload test artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test-screenshots
        path: ${{ env.WORKSPACE_ROOT }}/screenshots